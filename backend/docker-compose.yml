version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: component-generator-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: component-generator
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - component-generator-network

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: component-generator-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - component-generator-network

  # Backend API
  api:
    build: .
    container_name: component-generator-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/component-generator?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_SECRET: your-refresh-token-secret
      JWT_REFRESH_EXPIRES_IN: 30d
      SESSION_SECRET: your-session-secret-key-change-this
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      AI_MODEL: gpt-4o-mini
      AI_BASE_URL: https://openrouter.ai/api/v1
      FRONTEND_URL: http://localhost:3000
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
      LOG_LEVEL: info
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - component-generator-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  component-generator-network:
    driver: bridge